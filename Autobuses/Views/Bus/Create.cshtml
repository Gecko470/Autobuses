@model Autobuses.Clases.BusCLS

@{
    ViewBag.Title = "Buses";
    List<SelectListItem> listaSucursales = ViewBag.listaSucursales;
    List<SelectListItem> listaTipoBus = ViewBag.listaTipoBus;
    List<SelectListItem> listaModelos = ViewBag.listaModelos;
    List<SelectListItem> listaMarcas = ViewBag.listaMarcas;
}

<h2>Create</h2>
<hr />
<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm("Create", "Bus", FormMethod.Post, new { @id = "frm" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.IIDSUCURSAL, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IIDSUCURSAL, listaSucursales, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IIDSUCURSAL, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IIDTIPOBUS, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IIDTIPOBUS, listaTipoBus, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IIDTIPOBUS, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IIDMARCA, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IIDMARCA, listaMarcas, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IIDMARCA, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IIDMODELO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IIDMODELO, listaModelos, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IIDMODELO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PLACA, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PLACA, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PLACA, "", new { @class = "text-danger" })
                        @if (Model != null && !string.IsNullOrEmpty(Model.MensajeError))
                        {
                            @Html.Label(Model.MensajeError, Model.MensajeError, new { @class = "text-danger" })
                        }
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FECHACOMPRA, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FECHACOMPRA, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FECHACOMPRA, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NUMEROFILAS, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NUMEROFILAS, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NUMEROFILAS, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NUMEROCOLUMNAS, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NUMEROCOLUMNAS, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NUMEROCOLUMNAS, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DESCRIPCION, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DESCRIPCION, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DESCRIPCION, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OBSERVACION, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OBSERVACION, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OBSERVACION, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div style="display: flex; justify-content: space-between;">
                    @Html.ActionLink("Cancelar", "Index", new { }, new { @class = "btn btn-danger" })
                    <input type="button" value="Aceptar" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal" />
                </div>
            </div>
        }
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title text-primary" id="exampleModalLabel">Clientes</h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <span>Quires guardar los cambios?</span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="enviar()">Aceptar</button>
            </div>
        </div>
    </div>
</div>

<script>

    let frm = document.getElementById("frm");

    function enviar() {
        frm.submit();
    }

</script>